name: Build and Test

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

concurrency:
  group: "${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Setup and Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          # cache: pip
          # cache-dependency-path: setup.py

      - name: Install libkrb5 for Kerberos on Linux
        run: |
          sudo apt install -y libkrb5-dev
          pip install requests-kerberos

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install module
        run: pip install .[tests]

      - name: Test with pytest
        run: pytest

  deploy-dev:
    name: Deploy to Cloud Run (dev)
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    environment:
      name: dev
    permissions:
      id-token: write
      contents: read

    steps:
      - name: üö¢ Deploy
        uses: agrc/cloud-run-docker-deploy-composite-action@v1
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
          service: nfhl
          flags: |
            --cpu=1
            --memory=512Mi
            --min-instances=0
            --max-instances=1
            --timeout=180m
            --no-allow-unauthenticated
            --service-account=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          mounted-secrets:
            /secrets/app/secrets.json=${{secrets.PROJECT_ID}}/secrets/skid-secrets:latest

      - name: üï∞Ô∏è Create Cloud Scheduler
        run: |
          if [ ! "$(gcloud scheduler jobs list --location=us-central1 | grep saturday-evening)" ]; then
            gcloud scheduler jobs create http saturday-evening \
              --description="Trigger the nfhl-skid bot once a week on saturday evening" \
              --schedule="0 23 * * 6" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --uri="https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/${{ secrets.PROJECT_ID }}/jobs/nfhl:run" \
              --oauth-service-account-email=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          else
            gcloud scheduler jobs update http saturday-evening \
              --description="Trigger the nfhl-skid bot once a week on saturday evening" \
              --schedule="0 23 * * 6" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --uri="https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/${{ secrets.PROJECT_ID }}/jobs/nfhl:run" \
              --oauth-service-account-email=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          fi

  deploy-prod:
    name: Deploy to Cloud Run (prod)
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    permissions:
      id-token: write
      contents: read

    steps:
      - name: üö¢ Deploy
        uses: agrc/cloud-run-docker-deploy-composite-action@v1
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
          service: nfhl
          flags: |
            --cpu=1
            --memory=512Mi
            --min-instances=0
            --max-instances=1
            --timeout=180m
            --no-allow-unauthenticated
            --service-account=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          mounted-secrets:
            /secrets/app/secrets.json=${{secrets.PROJECT_ID}}/secrets/skid-secrets:latest

      - name: üï∞Ô∏è Create Cloud Scheduler
        run: |
          if [ ! "$(gcloud scheduler jobs list --location=us-central1 | grep saturday-evening)" ]; then
            gcloud scheduler jobs create http saturday-evening \
              --description="Trigger the nfhl-skid bot once a week on saturday evening" \
              --schedule="0 23 * * 6" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --uri="https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/${{ secrets.PROJECT_ID }}/jobs/nfhl:run" \
              --oauth-service-account-email=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          else
            gcloud scheduler jobs update http saturday-evening \
              --description="Trigger the nfhl-skid bot once a week on saturday evening" \
              --schedule="0 23 * * 6" \
              --time-zone=America/Denver \
              --location=us-central1 \
              --uri="https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/${{ secrets.PROJECT_ID }}/jobs/nfhl:run" \
              --oauth-service-account-email=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
          fi
